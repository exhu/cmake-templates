include(GNUInstallDirs)

set(SOURCES
    @PROJ_NAME@.c
)

set(PUBLIC_HEADERS
    include/@PROJ_NAME@/@PROJ_NAME@.h
)

add_library(@PROJ_NAME@_lib ${SOURCES} ${PUBLIC_HEADERS})
set_target_properties(@PROJ_NAME@_lib PROPERTIES OUTPUT_NAME @PROJ_NAME@)
target_compile_features(@PROJ_NAME@_lib PUBLIC c_std_99)
target_include_directories(@PROJ_NAME@_lib PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>)
target_include_directories(@PROJ_NAME@_lib PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)

set_target_properties(@PROJ_NAME@_lib PROPERTIES
    PUBLIC_HEADER ${PUBLIC_HEADERS}
) 

add_library(@PROJ_NAME@::lib ALIAS @PROJ_NAME@_lib)

install(TARGETS @PROJ_NAME@_lib EXPORT @PROJ_NAME@_targets
    PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/@PROJ_NAME@")

install(EXPORT @PROJ_NAME@_targets
    FILE @PROJ_NAME@-config.cmake
    NAMESPACE @PROJ_NAME@::
    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/@PROJ_NAME@")

# add version file generation here,
# in case of dependencies we need to create manually Config file, configure it and
# install via install(FILES)
# see https://cliutils.gitlab.io/modern-cmake/chapters/install/installing.html
